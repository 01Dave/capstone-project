openapi: 3.0.0
info:
  title: Scissor URL Shortener API
  version: 1.0.0
  description: A simple API to shorten URLs, generate custom URLs, and track URL usage.
servers:
  - url: http://localhost:5000
    description: Development server
paths:
  /shorten:
    post:
      summary: Shorten a URL
      description: Shorten a long URL and generate a QR code.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - originalUrl
              properties:
                originalUrl:
                  type: string
                  example: "https://www.example.com"
                customUrl:
                  type: string
                  example: "my-custom-url"
      responses:
        '200':
          description: URL shortened successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  shortUrl:
                    type: string
                    example: "http://short.ly/abc123"
                  qrCode:
                    type: string
                    format: base64
                    example: "QR_CODE_BASE64_STRING"
        '400':
          description: Invalid URL
  /analytics/{shortUrl}:
    get:
      summary: Get analytics for a shortened URL
      description: Retrieve the analytics data for a specific shortened URL.
      parameters:
        - in: path
          name: shortUrl
          required: true
          schema:
            type: string
          description: The shortened URL code
      responses:
        '200':
          description: Analytics data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  clicks:
                    type: integer
                    example: 42
                  referrers:
                    type: array
                    items:
                      type: string
                    example: ["google.com", "twitter.com"]
        '404':
          description: URL not found
  /history/{userId}:
    get:
      summary: Get link history for a user
      description: Retrieve the history of shortened links for a specific user.
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        '200':
          description: Link history retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    shortUrl:
                      type: string
                      example: "http://short.ly/abc123"
                    originalUrl:
                      type: string
                      example: "https://www.example.com"
                    createdAt:
                      type: string
                      format: date-time
                      example: "2024-08-09T12:34:56Z"
        '404':
          description: User not found
